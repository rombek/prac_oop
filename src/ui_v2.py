# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'modelling.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import typing as tp
from functools import partial

from PyQt5 import QtCore, QtGui, QtWidgets

from src.modelling import SupermarketModel
from src.ui_config import UIConfig, gen_results_palette, gen_queue_palette
from src.utils import logger, TOTAL_MODELLING_MINUTES


class Ui_SupermarketModelUI(object):

    def setup_model(self):
        checkouts_num = int(self.total_checkouts.text())
        time_between_customers_range = tuple(map(int, (self.time_btw_cust_low.text(), self.time_btw_cust_high.text())))
        customer_service_time_range = tuple(map(int, (self.service_time_low.text(), self.service_time_high.text())))
        purchase_price_range = tuple(
            map(int, (self.purchase_cost_low.toPlainText(), self.purchase_cost_high.toPlainText()))

        )
        ads_spend_per_day = int(self.adv_per_day.text()) * 1000
        discount_percent = int(self.discount_percent.text())
        profit_per_sale_percent = int(self.profit_percent.text())
        cashier_salary_per_day = int(float(self.salary_per_day.text().replace(',', '.')) * 1000)
        tick_time = int(self.tick_minutes.text())

        self.total_ticks = TOTAL_MODELLING_MINUTES // tick_time
        self.model_config = {
            'total_checkouts': checkouts_num,
            'max_checkout_capacity': int(self.queue_max_length.text()),
            'time_between_customers_range': time_between_customers_range,
            'customer_service_time_range': customer_service_time_range,
            'customer_purchase_price_range': purchase_price_range,
            'ads_spend_per_day': ads_spend_per_day,
            'discount_percent': discount_percent,
            'profit_per_sale_percent': profit_per_sale_percent,
            'cashier_salary_per_day': cashier_salary_per_day,
            'tick_time': tick_time,
            'random_state': 42,
        }

        self.model: SupermarketModel = SupermarketModel(
            **self.model_config,
        )

    def model_tick(self):
        self.model.tick()
        average_load = self.model.average_checkouts_workload()
        average_load = sum(average_load) / len(average_load)

        self.results['total_served'].setPlainText(str(self.model.total_served_customers()))
        self.results['total_lost'].setPlainText(str(self.model.total_lost_customers()))
        self.results['total_profit'].setPlainText(str(self.model.total_profit()))

        self.results['average_load'].setPlainText(str(round(average_load, 2)))
        self.results['total_spent_ads'].setPlainText(str(self.model.total_spent_on_ads()))
        self.results['total_spent_salaries'].setPlainText(str(self.model.total_spent_on_salaries()))
        self.results['total_spent_discount'].setPlainText(str(self.model.total_spent_on_discounts()))

        current_load = self.model.checkouts_current_workload()
        for idx, load in enumerate(current_load):
            self.checkouts_current_load[idx].display(str(load))

        cur_customer_progress = self.model.current_checkouts_customer_progress()
        for idx, progress in enumerate(cur_customer_progress):
            self.checkouts_customer_progress[idx].setValue(progress)

        logger.debug(f"TOTAL PROFIT = {self.model.total_profit()}")

    def to_the_end(self):
        while self.total_ticks > 0:
            self.model_tick()
            self.total_ticks -= 1

    def restart_modelling(self):
        self.model = SupermarketModel(**self.model_config)
        self.total_ticks = TOTAL_MODELLING_MINUTES // self.model_config['tick_time']

        for _, res_widget in self.results.items():
            res_widget.setPlainText('0')

        for checkout_load, checkout_cust_progress in zip(
            self.checkouts_current_load.values(), self.checkouts_customer_progress.values()
        ):
            checkout_load.display(str(0))
            checkout_cust_progress.setValue(0)

    def setup_results(self, window):
        _translate = QtCore.QCoreApplication.translate
        results_title = QtWidgets.QLabel(window)
        results_title.setGeometry(QtCore.QRect(920, 0, 280, 40))
        results_title.setText(_translate("SupermarketModelUI", f"Результаты"))
        results_title.setFont(UIConfig.title_font())

        self.mainLayout.addWidget(results_title)

        self.results = dict()
        self.results_labels = dict()
        for idx, result_name in enumerate(UIConfig.RESULTS_NAMES):
            self.results[result_name] = QtWidgets.QPlainTextEdit(window)
            self.results[result_name].setReadOnly(True)

            self.results[result_name].setGeometry(
                QtCore.QRect(UIConfig.RESULTS_X, UIConfig.RESULTS_Y + idx * UIConfig.RESULTS_DISTANCE, 100, 25)
            )
            self.results[result_name].setPalette(gen_results_palette())
            self.results[result_name].setAutoFillBackground(True)
            self.results[result_name].setProperty("value", 0.0)
            self.results[result_name].setObjectName(result_name)
            self.mainLayout.addWidget(self.results[result_name])

            self.results_labels[result_name] = QtWidgets.QLabel(window)
            self.results_labels[result_name].setGeometry(
                QtCore.QRect(UIConfig.RESULTS_X - 160, UIConfig.RESULTS_Y + idx * UIConfig.RESULTS_DISTANCE, 150,
                             30)
            )
            self.results_labels[result_name].setObjectName("{result_name}_label")
            self.mainLayout.addWidget(self.results_labels[result_name])

    def setup_checkouts(self, window):

        self.checkouts_current_load = dict()
        self.checkouts_customer_progress = dict()
        self.checkouts_labels: tp.Dict[int, QtWidgets.QLabel] = dict()

        for q_idx in range(7):
            self.checkouts_current_load[q_idx] = QtWidgets.QLCDNumber(window)
            self.checkouts_current_load[q_idx].setGeometry(
                QtCore.QRect(UIConfig.CHECKOUTS_X, UIConfig.CHECKOUTS_Y + UIConfig.CHECKOUTS_DISTANCE * q_idx, 65,
                             25)
            )
            self.checkouts_current_load[q_idx].setPalette(gen_queue_palette())
            self.checkouts_current_load[q_idx].setAutoFillBackground(True)
            self.checkouts_current_load[q_idx].setObjectName(f"queue_{q_idx}")
            if q_idx > 0:
                self.checkouts_current_load[q_idx].hide()
            self.mainLayout.addWidget(self.checkouts_current_load[q_idx])

            self.checkouts_customer_progress[q_idx] = QtWidgets.QProgressBar(window)
            self.checkouts_customer_progress[q_idx].setGeometry(
                QtCore.QRect(
                    UIConfig.CHECKOUTS_X + 90, UIConfig.CHECKOUTS_Y + UIConfig.CHECKOUTS_DISTANCE * q_idx, 120, 25
                )
            )
            self.checkouts_customer_progress[q_idx].setProperty("value", 0)
            self.checkouts_customer_progress[q_idx].setObjectName(f"checkout{q_idx}_load")
            if q_idx > 0:
                self.checkouts_customer_progress[q_idx].hide()
            self.mainLayout.addWidget(self.checkouts_customer_progress[q_idx])

            self.checkouts_labels[q_idx] = QtWidgets.QLabel(window)
            self.checkouts_labels[q_idx].setGeometry(
                QtCore.QRect(
                    UIConfig.CHECKOUTS_X + 110, UIConfig.CHECKOUTS_Y + UIConfig.CHECKOUTS_DISTANCE * q_idx - 30,
                    120, 25
                )
            )
            self.checkouts_labels[q_idx].setObjectName(f"checkout_{q_idx}")
            if q_idx > 0:
                self.checkouts_labels[q_idx].hide()
            self.mainLayout.addWidget(self.checkouts_labels[q_idx])

    def show_checkouts(self, cnt):
        for q_idx in self.checkouts_current_load:
            self.checkouts_current_load[q_idx].hide()
            self.checkouts_customer_progress[q_idx].hide()
            self.checkouts_labels[q_idx].hide()

        for i in range(cnt):
            self.checkouts_current_load[i].show()
            self.checkouts_customer_progress[i].show()
            self.checkouts_labels[i].show()

        self.mainLayout.update()

    def setupUi(self, window):
        self.mainLayout = QtWidgets.QVBoxLayout()

        self.setup_results(window)
        self.setup_checkouts(window)

        window.setObjectName("SupermarketModelUI")
        window.resize(1200, 800)
        self.left_line = QtWidgets.QFrame(window)
        self.left_line.setEnabled(True)
        self.left_line.setGeometry(QtCore.QRect(400, 0, 20, 800))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding,
                                           QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.left_line.sizePolicy().hasHeightForWidth())
        self.left_line.setSizePolicy(sizePolicy)
        self.left_line.setFrameShape(QtWidgets.QFrame.VLine)
        self.left_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.left_line.setObjectName("left_line")
        self.total_checkouts = QtWidgets.QSpinBox(window)
        self.total_checkouts.setGeometry(QtCore.QRect(350, 80, 50, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.total_checkouts.setFont(font)
        self.total_checkouts.setMinimum(1)
        self.total_checkouts.setMaximum(7)
        self.total_checkouts.setObjectName("total_checkouts")

        self.total_checkouts_label = QtWidgets.QLabel(window)
        self.total_checkouts_label.setGeometry(QtCore.QRect(10, 80, 300, 30))
        self.total_checkouts_label.setFont(UIConfig.settings_font())
        self.total_checkouts_label.setObjectName("total_checkouts_label")

        self.modelling_params_label = QtWidgets.QLabel(window)
        self.modelling_params_label.setGeometry(QtCore.QRect(10, 10, 400, 41))
        self.modelling_params_label.setFont(UIConfig.settings_font())
        self.modelling_params_label.setObjectName("modelling_params_label")

        self.label_3 = QtWidgets.QLabel(window)
        self.label_3.setGeometry(QtCore.QRect(10, 130, 300, 30))
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.queue_max_length = QtWidgets.QSpinBox(window)
        self.queue_max_length.setGeometry(QtCore.QRect(350, 130, 50, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.queue_max_length.setFont(font)
        self.queue_max_length.setMinimum(5)
        self.queue_max_length.setMaximum(8)
        self.queue_max_length.setObjectName("queue_max_length")
        self.label_5 = QtWidgets.QLabel(window)
        self.label_5.setGeometry(QtCore.QRect(10, 230, 300, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.time_btw_cust_low = QtWidgets.QSpinBox(window)
        self.time_btw_cust_low.setGeometry(QtCore.QRect(100, 270, 60, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.time_btw_cust_low.setFont(font)
        self.time_btw_cust_low.setMinimum(0)
        self.time_btw_cust_low.setMaximum(7)
        self.time_btw_cust_low.setProperty("value", 1)
        self.time_btw_cust_low.setObjectName("time_btw_cust_low")
        self.label_6 = QtWidgets.QLabel(window)
        self.label_6.setGeometry(QtCore.QRect(70, 275, 20, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(window)
        self.label_7.setGeometry(QtCore.QRect(180, 275, 20, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.time_btw_cust_high = QtWidgets.QSpinBox(window)
        self.time_btw_cust_high.setGeometry(QtCore.QRect(220, 270, 60, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.time_btw_cust_high.setFont(font)
        self.time_btw_cust_high.setMinimum(7)
        self.time_btw_cust_high.setMaximum(10)
        self.time_btw_cust_high.setProperty("value", 7)
        self.time_btw_cust_high.setObjectName("time_btw_cust_high")
        self.label_8 = QtWidgets.QLabel(window)
        self.label_8.setGeometry(QtCore.QRect(70, 455, 21, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(window)
        self.label_9.setGeometry(QtCore.QRect(180, 455, 21, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(window)
        self.label_10.setGeometry(QtCore.QRect(10, 410, 300, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_10.setTextFormat(QtCore.Qt.PlainText)
        self.label_10.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_10.setObjectName("label_10")
        self.purchase_cost_low = QtWidgets.QPlainTextEdit(window)
        self.purchase_cost_low.setGeometry(QtCore.QRect(100, 450, 60, 30))
        self.purchase_cost_low.setObjectName("purchase_cost_low")
        self.purchase_cost_high = QtWidgets.QPlainTextEdit(window)
        self.purchase_cost_high.setGeometry(QtCore.QRect(220, 450, 60, 30))
        self.purchase_cost_high.setObjectName("purchase_cost_high")
        self.service_time_low = QtWidgets.QSpinBox(window)
        self.service_time_low.setGeometry(QtCore.QRect(100, 360, 60, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.service_time_low.setFont(font)
        self.service_time_low.setMinimum(0)
        self.service_time_low.setMaximum(7)
        self.service_time_low.setProperty("value", 1)
        self.service_time_low.setObjectName("service_time_low")
        self.label_11 = QtWidgets.QLabel(window)
        self.label_11.setGeometry(QtCore.QRect(70, 365, 21, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.service_time_high = QtWidgets.QSpinBox(window)
        self.service_time_high.setGeometry(QtCore.QRect(220, 360, 60, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.service_time_high.setFont(font)
        self.service_time_high.setMinimum(7)
        self.service_time_high.setMaximum(10)
        self.service_time_high.setProperty("value", 7)
        self.service_time_high.setObjectName("service_time_high")
        self.label_12 = QtWidgets.QLabel(window)
        self.label_12.setGeometry(QtCore.QRect(180, 365, 21, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(window)
        self.label_13.setGeometry(QtCore.QRect(10, 320, 400, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_13.setObjectName("label_13")
        self.adv_per_day = QtWidgets.QSpinBox(window)
        self.adv_per_day.setGeometry(QtCore.QRect(350, 500, 50, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.adv_per_day.setFont(font)
        self.adv_per_day.setMinimum(0)
        self.adv_per_day.setMaximum(100)
        self.adv_per_day.setSingleStep(7)
        self.adv_per_day.setObjectName("adv_per_day")
        self.label_14 = QtWidgets.QLabel(window)
        self.label_14.setGeometry(QtCore.QRect(10, 500, 300, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(window)
        self.label_15.setGeometry(QtCore.QRect(10, 540, 300, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.discount_percent = QtWidgets.QSpinBox(window)
        self.discount_percent.setGeometry(QtCore.QRect(350, 540, 50, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.discount_percent.setFont(font)
        self.discount_percent.setMinimum(0)
        self.discount_percent.setMaximum(100)
        self.discount_percent.setSingleStep(7)
        self.discount_percent.setObjectName("discount_percent")
        self.profit_percent = QtWidgets.QSpinBox(window)
        self.profit_percent.setGeometry(QtCore.QRect(350, 580, 50, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.profit_percent.setFont(font)
        self.profit_percent.setMinimum(0)
        self.profit_percent.setMaximum(100)
        self.profit_percent.setSingleStep(1)
        self.profit_percent.setProperty("value", 9)
        self.profit_percent.setObjectName("profit_percent")
        self.label_16 = QtWidgets.QLabel(window)
        self.label_16.setGeometry(QtCore.QRect(10, 580, 300, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(window)
        self.label_17.setGeometry(QtCore.QRect(10, 630, 300, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_17.setFont(font)
        self.label_17.setObjectName("label_17")
        self.salary_per_day = QtWidgets.QDoubleSpinBox(window)
        self.salary_per_day.setGeometry(QtCore.QRect(350, 620, 50, 30))
        self.salary_per_day.setDecimals(1)
        self.salary_per_day.setMaximum(100.0)
        self.salary_per_day.setSingleStep(0.1)
        self.salary_per_day.setProperty("value", 1.5)
        self.salary_per_day.setObjectName("salary_per_day")
        self.start_modelling = QtWidgets.QPushButton(window)
        self.start_modelling.setGeometry(QtCore.QRect(90, 720, 100, 50))
        self.start_modelling.setObjectName("start_modelling")

        self.line_2 = QtWidgets.QFrame(window)
        self.line_2.setGeometry(QtCore.QRect(900, 0, 20, 800))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.label_22 = QtWidgets.QLabel(window)
        self.label_22.setGeometry(QtCore.QRect(920, 50, 70, 30))
        self.label_22.setObjectName("label_22")
        self.tick = QtWidgets.QPushButton(window)
        self.tick.setGeometry(QtCore.QRect(490, 720, 100, 50))
        self.tick.setObjectName("tick")
        self.tick.setDisabled(True)

        self.to_end = QtWidgets.QPushButton(window)
        self.to_end.setGeometry(QtCore.QRect(690, 720, 100, 50))
        self.to_end.setObjectName("to_end")
        self.to_end.setDisabled(True)

        self.restart = QtWidgets.QPushButton(window)
        self.restart.setGeometry(QtCore.QRect(930, 720, 100, 50))
        self.restart.setObjectName("restart")
        self.restart.setDisabled(True)

        self.exit = QtWidgets.QPushButton(window)
        self.exit.setGeometry(QtCore.QRect(1080, 720, 100, 50))
        self.exit.setObjectName("exit")

        self.label_18 = QtWidgets.QLabel(window)
        self.label_18.setGeometry(QtCore.QRect(10, 670, 300, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_18.setFont(font)
        self.label_18.setObjectName("label_18")
        self.tick_minutes = QtWidgets.QSpinBox(window)
        self.tick_minutes.setGeometry(QtCore.QRect(350, 660, 50, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.tick_minutes.setFont(font)
        self.tick_minutes.setMinimum(7)
        self.tick_minutes.setMaximum(100)
        self.tick_minutes.setSingleStep(7)
        self.tick_minutes.setObjectName("tick_minutes")

        self.retranslateUi(window)
        self.total_checkouts.valueChanged['int'].connect(self.show_checkouts)

        self.config_buttons = [
            self.tick_minutes,
            self.salary_per_day,
            self.profit_percent,
            self.adv_per_day,
            self.discount_percent,
            self.purchase_cost_low,
            self.purchase_cost_high,
            self.time_btw_cust_low,
            self.time_btw_cust_high,
            self.queue_max_length,
            self.total_checkouts,
            self.service_time_low,
            self.service_time_high,
            self.start_modelling,
        ]
        self.start_modelling.clicked['bool'].connect(self.setup_model)
        for button in self.config_buttons:
            self.start_modelling.clicked['bool'].connect(button.setEnabled)
        self.start_modelling.clicked['bool'].connect(self.tick.setDisabled)  # type: ignore
        self.start_modelling.clicked['bool'].connect(self.to_end.setDisabled)  # type: ignore
        self.start_modelling.clicked['bool'].connect(self.restart.setDisabled)

        self.tick.clicked['bool'].connect(self.model_tick)
        self.to_end.clicked['bool'].connect(self.to_the_end)
        self.to_end.clicked['bool'].connect(self.tick.setEnabled)  # type: ignore

        self.restart.clicked.connect(self.restart_modelling)
        for button in self.config_buttons:
            self.restart.clicked['bool'].connect(button.setDisabled)
        self.restart.clicked['bool'].connect(self.tick.setEnabled)  # type: ignore
        self.restart.clicked['bool'].connect(self.to_end.setEnabled)  # type: ignore
        self.restart.clicked['bool'].connect(self.restart.setEnabled)

        self.exit.clicked.connect(window.close)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(window)

    def retranslateUi(self, SupermarketModelUI):
        _translate = QtCore.QCoreApplication.translate
        SupermarketModelUI.setWindowTitle(_translate("SupermarketModelUI", "Моделирование супермаркета"))
        self.total_checkouts_label.setText(_translate("SupermarketModelUI", "Число касс в супермаркете"))
        self.modelling_params_label.setText(_translate("SupermarketModelUI", "Параметры моделирования"))
        self.label_3.setText(_translate("SupermarketModelUI", "Макс. длина очереди"))
        self.label_5.setText(_translate("SupermarketModelUI", "Промежуток между покупателями"))
        self.label_6.setText(_translate("SupermarketModelUI", "от"))
        self.label_7.setText(_translate("SupermarketModelUI", "до"))
        self.label_8.setText(_translate("SupermarketModelUI", "от"))
        self.label_9.setText(_translate("SupermarketModelUI", "до"))
        self.label_10.setText(_translate("SupermarketModelUI", "Стоимость покупки"))
        self.purchase_cost_low.setPlainText(_translate("SupermarketModelUI", "30"))
        self.purchase_cost_high.setPlainText(_translate("SupermarketModelUI", "9000"))
        self.label_11.setText(_translate("SupermarketModelUI", "от"))
        self.label_12.setText(_translate("SupermarketModelUI", "до"))
        self.label_13.setText(_translate("SupermarketModelUI", "Время обслуживания одного покупателя"))
        self.label_14.setText(_translate("SupermarketModelUI", "Затраты на рекламу в день(т.р.)"))
        self.label_15.setText(_translate("SupermarketModelUI", "Величина скидки (%)"))
        self.label_16.setText(_translate("SupermarketModelUI", "Прибыль от каждой покупки (%)"))
        self.label_17.setText(_translate("SupermarketModelUI", "Зарплата кассира в день (т.р)"))
        self.start_modelling.setText(_translate("SupermarketModelUI", "Старт"))

        for idx, checkout_name in self.checkouts_labels.items():
            checkout_name.setText(_translate("SupermarketModelUI", f"Касса {idx + 1}"))
        for result_name, result_ru in UIConfig.RESULTS_NAMES.items():
            self.results_labels[result_name].setText(_translate("SupermarketModelUI", result_ru))

        self.tick.setText(_translate("SupermarketModelUI", "Шаг"))
        self.to_end.setText(_translate("SupermarketModelUI", "До конца"))
        self.exit.setText(_translate("SupermarketModelUI", "Выход"))
        self.restart.setText(_translate("SupermarketModelUI", "Заново"))

        self.label_18.setText(_translate("SupermarketModelUI", "Минут в шаге"))
